###############################
# Terraform / Infrastruktur   #
###############################
# Lokale Terraform Arbeitsverzeichnisse & Lockfile
**/.terraform/*
.terraform.lock.hcl
# States (werden nicht versioniert)
*.tfstate
*.tfstate.*

###############################
# System / Plattform Artefakte
###############################
.DS_Store
*.exe
crash.log

###############################
# Projekt-spezifische Ausschlüsse
###############################
# Archivierte / alte Dokumente
archive/

# KI / Assistenten Dateien (Groß- & Kleinschreibung abgedeckt)
*[cC][lL][aA][uU][dD][eE]*

# Pre-Commit Konfiguration lokal (nicht teilen)
.pre-commit-config.yaml

# CHANGELOG lokal führen (oder Release Notes generieren)
CHANGELOG*

###############################
# GitLab Artefakte
###############################
# Kopie / Hilfsdatei einer CI Konfiguration
.gitlab-ci copy.yml
# Nur Merge Request Templates ignorieren, andere .gitlab Inhalte erlauben
.gitlab/merge_request_templates/

# (Falls zukünftig komplettes .gitlab Verzeichnis ignoriert werden soll: .gitlab/ eintragen)

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
#override.tf
#override.tf.json
#*_override.tf
#*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

